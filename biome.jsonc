{
  "$schema": "./node_modules/@biomejs/biome/configuration_schema.json",
  "json": {
    "parser": {
      "allowComments": true,
      "allowTrailingCommas": true,
    },
  },
  "organizeImports": {
    // We use `eslint-plugin-import` for imports sorting
    "enabled": false,
  },
  "formatter": {
    // We use `dprint` for formatting
    "enabled": false,
  },
  "linter": {
    "enabled": true,
    "ignore": [
      "coverage/**",
      "dist/**",
      "lib/**",
      "output/**",
      "etc/*.md",
      "website/docs/en/api/**",
      "website/docs/zh/api/**",
      "website/docs/en/changelog/**",
      "website/docs/zh/changelog/**",

      "fixtures/error/**",
      "test/diagnostic/**",
      "test/hotCases/**",
      "__swc_snapshots__/**",
      "__snapshots__/**",
      "__preparation__/**",
      "packages/react/transform/index.d.ts",
      "packages/react/transform/index.cjs",

      "packages/react/index.d.ts",
      "packages/react/runtime/**",
      "packages/react/worklet-runtime/**",

      "packages/tools/**",

      "packages/webpack/*/runtime/**",

      "packages/web-platform/**",

      "packages/third-party/**",
    ],
    "rules": {
      // We are migrating from ESLint to Biome
      "recommended": false,
      "correctness": {
        "noUnusedImports": "error",
        "noUnusedVariables": "error",
        "noPrecisionLoss": "error",
        "noInvalidUseBeforeDeclaration": "error",

        // eslint-plugin-react
        "useJsxKeyInIterable": "error",
        "noChildrenProp": "error",

        // eslint-plugin-react-hooks
        "useExhaustiveDependencies": "error",
        "useHookAtTopLevel": "error",

        // eslint-plugin-unicorn
        "noInvalidBuiltinInstantiation": "error",
      },
      "complexity": {
        // eslint-plugin-react
        "noUselessFragments": "error",

        // eslint-plugin-unicorn
        "noUselessSwitchCase": "error",
        "useDateNow": "error",
        "useFlatMap": "error",

        // typescript-eslint
        "noBannedTypes": "error",
        "useLiteralKeys": "off",
        "noUselessThisAlias": "error",
        "noUselessTypeConstraint": "error",
        "noUselessConstructor": "error",
        "noUselessEmptyExport": "error",
        "useOptionalChain": "error",
      },
      "style": {
        // eslint-plugin-react
        "useFragmentSyntax": "error",

        // eslint-plugin-unicorn
        "useExplicitLengthCheck": "error",
        "useNodejsImportProtocol": "error",
        "useNumberNamespace": "error",

        // typescript-eslint
        "useConsistentArrayType": "error",
        "useExportType": "error",
        "useImportType": "error",
        "useDefaultParameterLast": "error",
        "noInferrableTypes": "error",
        "noNamespace": "error",
        "useThrowOnlyError": "error",
        "useAsConstAssertion": "error",
        "useEnumInitializers": "error",
        "useForOf": "error",
        "useShorthandFunctionType": "error",
        "useLiteralEnumMembers": "error",
      },
      "suspicious": {
        "noConsoleLog": "off",

        // eslint-plugin-react
        "noDuplicateJsxProps": "error",

        // eslint-plugin-unicorn
        "useErrorMessage": "error",
        "useIsArray": "error",

        // typescript-eslint
        "noEmptyBlockStatements": "error",
        "noEmptyInterface": "error",
        "noExplicitAny": "error",
        "noExtraNonNullAssertion": "error",
        "noConfusingVoidType": "error",
        "noMisleadingInstantiator": "error", // cSpell:disable-line
        "noRedeclare": "error",
        "noUnsafeDeclarationMerging": "error",
        "useAwait": "error",
      },
      "nursery": {
        // typescript-eslint
        "useAdjacentOverloadSignatures": "error",
      },
    },
  },
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "defaultBranch": "main",
    "useIgnoreFile": true,
  },
}
